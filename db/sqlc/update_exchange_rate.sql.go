// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: update_exchange_rate.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const updateExchangeRate = `-- name: UpdateExchangeRate :one
UPDATE exchange_rates
SET rate = $3, created_at = NOW()
WHERE from_currency = $1 AND to_currency = $2
RETURNING id, from_currency, to_currency, rate::float8, created_at
`

type UpdateExchangeRateParams struct {
	FromCurrency string         `json:"from_currency"`
	ToCurrency   string         `json:"to_currency"`
	Rate         pgtype.Numeric `json:"rate"`
}

type UpdateExchangeRateRow struct {
	ID           int64              `json:"id"`
	FromCurrency string             `json:"from_currency"`
	ToCurrency   string             `json:"to_currency"`
	Rate         float64            `json:"rate"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

func (q *Queries) UpdateExchangeRate(ctx context.Context, arg UpdateExchangeRateParams) (UpdateExchangeRateRow, error) {
	row := q.db.QueryRow(ctx, updateExchangeRate, arg.FromCurrency, arg.ToCurrency, arg.Rate)
	var i UpdateExchangeRateRow
	err := row.Scan(
		&i.ID,
		&i.FromCurrency,
		&i.ToCurrency,
		&i.Rate,
		&i.CreatedAt,
	)
	return i, err
}
