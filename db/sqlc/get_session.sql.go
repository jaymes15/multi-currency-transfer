// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: get_session.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const getSession = `-- name: GetSession :one
SELECT id, username, client_ip, user_agent, is_blocked, expires_at, created_at
FROM sessions
WHERE id = $1 LIMIT 1
`

type GetSessionRow struct {
	ID        uuid.UUID `json:"id"`
	Username  string    `json:"username"`
	ClientIp  string    `json:"client_ip"`
	UserAgent string    `json:"user_agent"`
	IsBlocked bool      `json:"is_blocked"`
	ExpiresAt time.Time `json:"expires_at"`
	CreatedAt time.Time `json:"created_at"`
}

func (q *Queries) GetSession(ctx context.Context, id uuid.UUID) (GetSessionRow, error) {
	row := q.db.QueryRow(ctx, getSession, id)
	var i GetSessionRow
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.ClientIp,
		&i.UserAgent,
		&i.IsBlocked,
		&i.ExpiresAt,
		&i.CreatedAt,
	)
	return i, err
}
